var websocketCapture=function(){"use strict";function s(t){return t==null||typeof t=="function"?{main:t}:t}const a=s(()=>{console.log("[WebSocket Capture] Starting initialization");try{let t=function(){if(!(this.currentTarget instanceof WebSocket))return i.call(this);const e=i.call(this);try{if(typeof e=="string")try{JSON.parse(e)}catch{}window.dispatchEvent(new CustomEvent("websocket-incoming",{detail:{url:this.currentTarget.url,data:typeof e=="string"?e:"(binary data)",timestamp:new Date().toISOString()}}))}catch(c){console.error("[WebSocket Capture] Error processing message:",c)}return e};const r=Object.getOwnPropertyDescriptor(MessageEvent.prototype,"data");if(!r||!r.get){console.error("[WebSocket Capture] Could not get data property descriptor");return}const i=r.get;r.get=t,Object.defineProperty(MessageEvent.prototype,"data",r);const l=WebSocket.prototype.send;WebSocket.prototype.send=function(o){try{if(typeof o=="string")try{JSON.parse(o)}catch{}window.dispatchEvent(new CustomEvent("websocket-outgoing",{detail:{url:this.url,data:typeof o=="string"?o:"(binary data)",timestamp:new Date().toISOString()}}))}catch(e){console.error("[WebSocket Capture] Error intercepting send:",e)}return l.call(this,o)},console.log("[WebSocket Capture] Initialized successfully")}catch(t){console.error("[WebSocket Capture] Initialization failed:",t)}});function p(){}function n(t,...r){}const u={debug:(...t)=>n(console.debug,...t),log:(...t)=>n(console.log,...t),warn:(...t)=>n(console.warn,...t),error:(...t)=>n(console.error,...t)};return(async()=>{try{return await a.main()}catch(t){throw u.error('The unlisted script "websocket-capture" crashed on startup!',t),t}})()}();
websocketCapture;
